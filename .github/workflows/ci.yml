name: ci
on:
  workflow_dispatch: {}
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
env:
  GOLANG_VERSION: 1.22
  GOTENBERG_VERSION: 8.8.0

jobs:
  build-docker-image:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: false
      
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/onebrief/gotenberg

      - name: Docker Build
        id: build
        uses: docker/build-push-action@v3
        with:
          context: ./build/Dockerfile.bc
          push: false
          build-args: |
            GOLANG_VERSION="${{ env.GOLANG_VERSION }}",
            GOTENBERG_VERSION="${{ env.GOTENBERG_VERSION }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64,
            linux/arm64,
            linux/386,
            linux/arm/v7